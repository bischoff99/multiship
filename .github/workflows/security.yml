name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  # CodeQL Analysis
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql-config.yml

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm --recursive build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # Dependency vulnerability scanning
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        run: pnpm audit --audit-level=moderate
        continue-on-error: true

      - name: Run dependency check with OWASP
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'multiship'
          path: .
          format: 'ALL'

      - name: Upload dependency check results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-report
          path: reports/

  # Secret detection
  secrets-detection:
    name: Secrets Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-path: .gitleaks.toml

  # Container security scanning
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    needs: [codeql-analysis, dependency-scan]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build API Docker image
        run: docker build -f apps/api/Dockerfile -t multiship-api:security .

      - name: Build Web Docker image
        run: docker build -f apps/web/Dockerfile -t multiship-web:security .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'multiship-api:security'
          format: 'sarif'
          output: 'trivy-results-api.sarif'

      - name: Run Trivy vulnerability scanner (Web)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'multiship-web:security'
          format: 'sarif'
          output: 'trivy-results-web.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-api.sarif'

      - name: Upload Trivy scan results (Web)
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-web.sarif'

  # License compliance check
  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check licenses
        run: pnpm licenses list
        continue-on-error: true

      - name: Run license compatibility check
        uses: LicenseFinder/license_finder@v0.10.0
        with:
          project: 'multiship'
          license_whitelist: 'MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC'

  # Infrastructure as Code security scan
  iac-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov IaC scan
        uses: bridgecrewio/bridgecrew-action@master
        with:
          api-key: ${{ secrets.BRIDGECREW_API_KEY }}
          directory: .
          framework: 'dockercompose'
          output_format: 'cli'
          soft_fail: true

  # Security summary
  security-summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs: [codeql-analysis, dependency-scan, secrets-detection, container-scan, license-check]
    if: always()

    steps:
      - name: Generate security report
        run: |
          echo "# Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Scan Results:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ CodeQL Analysis: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dependency Vulnerability Scan: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Secrets Detection: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Container Security Scan: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ License Compliance: Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All security scans completed successfully." >> $GITHUB_STEP_SUMMARY